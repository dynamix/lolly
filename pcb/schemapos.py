from skip import Symbol, Schematic
import os

# this assumes the following
# * a template file that contains one led that can be cloned - named "T"
# * we assume 4 pin leds

ALL = [ [147,195, 148, 149, 150, 141, 142, 143, 144, 145, 146, 98, 99, 100, 101, 102, 103, 104, 105, 106, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 507, 506, 505, 504, 503, 502, 501, 500, 499, 498, 497, 478, 477, 476, 475, 474, 473, 472, 471, 470, 469, 468, 467, 463, 462, 461, 460, 459, 458, 457, 456, 455, 454, 453, 452, 425, 424, 423, 422, 421, 420, 419, 418, 417, 416, 415, 414, 413, 412, 411, 410, 409, 408, 371, 370, 369, 368, 367, 366, 365, 364, 363, 318], [196,293, 294, 295, 289, 290, 291, 292, 245, 246, 247, 248, 249, 250, 236, 237, 238, 239, 240, 241, 242, 243, 244, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 26, 27, 28, 29, 30, 31, 32, 33, 34, 19, 20, 21, 22, 23, 24, 25, 464, 465, 466, 508, 509, 510, 511, 512],[391,439, 440, 438, 392, 393, 394, 395, 384, 385, 386, 387, 388, 389, 390, 342, 343, 344, 345, 346, 347, 348, 349, 350, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 163, 164, 165, 166, 167, 168, 169, 170, 171, 123, 124, 125, 126, 127, 128, 129, 119, 120, 121, 122, 74, 75], [1,49, 50, 48, 47, 6, 5, 4, 3, 2, 488, 489, 490, 491, 492, 493, 494, 495, 496, 479, 480, 481, 482, 483, 484, 485, 486, 487, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 269, 270, 271, 272, 273, 274, 275, 276, 277, 263, 264, 265, 266, 267, 268, 221, 222, 223, 219, 220]]



s = Schematic('lolly-backup-new.kicad_sch')

start = [147, 196, 391, 1]

leds = [[147],[196],[391],[1]]


for i in range(512):
  a = s.symbol[f"D{i+1}"].pin.DO.attached_symbols
  b = s.symbol[f"D{i+1}"].pin.DI.attached_symbols
  if len(a) > 2:
    print(f"{i+1} DO to {a}")
  if len(b) > 2:
    print(f"{i+1} DI to {b}")




for idx, x in enumerate(start):
  led = x
  while True:    
    syms = s.symbol[f"D{led}"].pin.DO.attached_symbols
    # print(f"{led} l={len(syms)}")
    if len(syms) == 0:
      break
    led1 = int(syms[1].Reference.value[1:])
    led2 = int(syms[0].Reference.value[1:])
    if led1 == led:
      led = led2
    else:
      led = led1
    leds[idx].append(led)
  

print(leds)

for idx,a in enumerate(leds):

  for led_idx,led in enumerate(a):
    sym = s.symbol[f"D{led}"] 
    # sym.move((led_idx % 20) * 20 + idx * 450,  (led_idx // 20)*20 )
    sym.move((led_idx % 20) * 20 + (idx%2) * 450,  (led_idx // 20)*20 + 200 * (idx // 2))




for w in s.wire:
  w.delete()

vcc = s.symbol.PWR01
gnd = s.symbol.PWR02

seen = {}

def connect(led1,led2):
  if led1 in seen:
    print(f"XXX how has it been seen already {led1}?")
    

  seen[led1] = True
  led1 = s.symbol[f"D{led1}"] 
  led2 = s.symbol[f"D{led2}"] 

  if len(led1.pin.DO.attached_symbols):
    print("WTFFF")
    print(led1.pin.DO.attached_symbols)
  w = s.wire.new()
  w.start_at(led1.pin.DO)
  w.end_at(led2.pin.DI)
  w = s.wire.new()
  w.start_at(led1.pin.CO)
  w.end_at(led2.pin.CI)


for a in ALL:
  led1 = None
  for led2 in a:
    if led1:
  # for led1,led2 in zip(a,a[1:]):
      connect(led1,led2)
    led1 = led2
  for i in a:
    led = s.symbol[f"D{i}"] 
    w = s.wire.new()
    w.start_at(led.pin.VCC)
    w.end_at(vcc)
    w = s.wire.new()
    w.start_at(led.pin.GND)
    w.end_at(gnd)

s.write('lolly.kicad_sch')



# 0
# [195, 148, 149, 150, 141, 142, 143, 144, 145, 146, 98, 99, 100, 101, 102, 103, 104, 105, 106, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 507, 506, 505, 504, 503, 502, 501, 500, 499, 498, 497, 478, 477, 476, 475, 474, 473, 472, 471, 470, 469, 468, 467, 463, 462, 461, 460, 459, 458, 457, 456, 455, 454, 453, 452, 425, 424, 423, 422, 421, 420, 419, 418, 417, 416, 415, 414, 413, 412, 411, 410, 409, 408, 371, 370, 369, 368, 367, 366, 365, 364, 363, 318]
# 1
# [293, 294, 295, 289, 290, 291, 292, 245, 246, 247, 248, 249, 250, 236, 237, 238, 239, 240, 241, 242, 243, 244, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 26, 27, 28, 29, 30, 31, 32, 33, 34, 19, 20, 21, 22, 23, 24, 25, 464, 465, 466, 508, 509, 510, 511, 512]
# 2
# [439, 440, 438, 392, 393, 394, 395, 384, 385, 386, 387, 388, 389, 390, 342, 343, 344, 345, 346, 347, 348, 349, 350, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 163, 164, 165, 166, 167, 168, 169, 170, 171, 123, 124, 125, 126, 127, 128, 129, 119, 120, 121, 122, 74, 75]
# 3
# [49, 50, 48, 47, 6, 5, 4, 3, 2, 488, 489, 490, 491, 492, 493, 494, 495, 496, 479, 480, 481, 482, 483, 484, 485, 486, 487, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 269, 270, 271, 272, 273, 274, 275, 276, 277, 263, 264, 265, 266, 267, 268, 221, 222, 223, 219, 220]


for i in range(512):
  a = s.symbol[f"D{i+1}"].pin.DO.attached_symbols
  if len(a) > 2:
    print(i+1)
    print(a)

for i in range(512):
  a = s.symbol[f"D{i+1}"].pin.DI.attached_symbols
  if len(a) > 2:
    print(i+1)
    print(a)
